<params>
<param>
<value><struct>
<member>
<name>GlobalData</name>
<value><array><data>
<value><struct>
<member>
<name>Kind</name>
<value><string>Boolean</string></value>
</member>
<member>
<name>Description</name>
<value><string>
If True, present an assignment introduction page with
content defined by IntroductionContent.
</string></value>
</member>
<member>
<name>Value</name>
<value><boolean>0</boolean></value>
</member>
<member>
<name>Name</name>
<value><string>Introduction</string></value>
</member>
</struct></value>
<value><struct>
<member>
<name>Kind</name>
<value><string>String</string></value>
</member>
<member>
<name>Description</name>
<value><string>Content for the assignment introduction, if presented.</string></value>
</member>
<member>
<name>Value</name>
<value><string>Temporary content for the introduction.</string></value>
</member>
<member>
<name>Name</name>
<value><string>IntroductionContent</string></value>
</member>
</struct></value>
<value><struct>
<member>
<name>Kind</name>
<value><string>String</string></value>
</member>
<member>
<name>Description</name>
<value><string>
Content for the page presented at the conclusion
of the assignment.
</string></value>
</member>
<member>
<name>Value</name>
<value><string>&lt;p&gt;The assignment is completed.&lt;/p&gt;</string></value>
</member>
<member>
<name>Name</name>
<value><string>FinishContent</string></value>
</member>
</struct></value>
<value><struct>
<member>
<name>Kind</name>
<value><string>Integer</string></value>
</member>
<member>
<name>Description</name>
<value><string>
(Readonly)
This item will contain the number of the current attempt.
</string></value>
</member>
<member>
<name>Value</name>
<value><int>1</int></value>
</member>
<member>
<name>Name</name>
<value><string>Attempt</string></value>
</member>
</struct></value>
<value><struct>
<member>
<name>Kind</name>
<value><string>Integer</string></value>
</member>
<member>
<name>Description</name>
<value><string>
(Readonly)
This item will contain the number of attempts given
to solve the current problem.
</string></value>
</member>
<member>
<name>Value</name>
<value><int>0</int></value>
</member>
<member>
<name>Name</name>
<value><string>Attempts</string></value>
</member>
</struct></value>
<value><struct>
<member>
<name>Kind</name>
<value><string>String</string></value>
</member>
<member>
<name>Description</name>
<value><string>
(Readonly)
This item will contain the name of the current problem.
</string></value>
</member>
<member>
<name>Value</name>
<value><string></string></value>
</member>
<member>
<name>Name</name>
<value><string>Problem</string></value>
</member>
</struct></value>
<value><struct>
<member>
<name>Kind</name>
<value><string>Struct</string></value>
</member>
<member>
<name>Name</name>
<value><string>Intervention</string></value>
</member>
<member>
<name>CondPath</name>
<value><string>Intervention</string></value>
</member>
<member>
<name>Value</name>
<value><array><data>
<value><struct>
<member>
<name>Kind</name>
<value><string>Derived</string></value>
</member>
<member>
<name>Description</name>
<value><string>
If evaluates to True, then the courseware will
suspend after giving the feedback until the student
receives help by a human (instructor or TA).
</string></value>
</member>
<member>
<name>EvalMode</name>
<value><string>Dynamic</string></value>
</member>
<member>
<name>Name</name>
<value><string>Condition</string></value>
</member>
<member>
<name>Expression</name>
<value><string>False</string></value>
</member>
<member>
<name>CondPath</name>
<value><string>Intervention['Condition']</string></value>
</member>
</struct></value>
<value><struct>
<member>
<name>Kind</name>
<value><string>String</string></value>
</member>
<member>
<name>Description</name>
<value><string>
If Condition evaluates to True, this content
is appended to the feedback to give the student
instructions to seek human help.
</string></value>
</member>
<member>
<name>Value</name>
<value><string>
&lt;p style="color:red"&gt;
You appear to be having difficulty with this problem.
&lt;b&gt;Please see your instructor.&lt;/b&gt;
Afterwards, you will be able to finish the assignment.
&lt;/p&gt;
</string></value>
</member>
<member>
<name>Name</name>
<value><string>Content</string></value>
</member>
</struct></value>
</data></array></value>
</member>
<member>
<name>Description</name>
<value><string>Definitions for instructor interventions.</string></value>
</member>
</struct></value>
<value><struct>
<member>
<name>Kind</name>
<value><string>Boolean</string></value>
</member>
<member>
<name>Description</name>
<value><string>
If True, present feedback following each question on the Problem page,
rather than on a separate Feedback page.
</string></value>
</member>
<member>
<name>Value</name>
<value><boolean>0</boolean></value>
</member>
<member>
<name>Name</name>
<value><string>EmbeddedFeedback</string></value>
</member>
</struct></value>
</data></array></value>
</member>
<member>
<name>Problems</name>
<value><array><data>
<value><struct>
<member>
<name>Feedback</name>
<value><array><data>
<value><struct>
<member>
<name>Kind</name>
<value><string>Struct</string></value>
</member>
<member>
<name>CondPath</name>
<value><string></string></value>
</member>
<member>
<name>Value</name>
<value><array><data>
<value><struct>
<member>
<name>Kind</name>
<value><string>Struct</string></value>
</member>
<member>
<name>CondPath</name>
<value><string></string></value>
</member>
<member>
<name>Value</name>
<value><array><data>
<value><struct>
<member>
<name>Kind</name>
<value><string>Derived</string></value>
</member>
<member>
<name>Expression</name>
<value><string>Response.Q1=='V' </string></value>
</member>
<member>
<name>Name</name>
<value><string>Expression</string></value>
</member>
<member>
<name>EvalMode</name>
<value><string>Dynamic</string></value>
</member>
</struct></value>
<value><struct>
<member>
<name>Kind</name>
<value><string>Array</string></value>
</member>
<member>
<name>CondPath</name>
<value><string></string></value>
</member>
<member>
<name>Value</name>
<value><array><data>
<value><struct>
<member>
<name>Kind</name>
<value><string>String</string></value>
</member>
<member>
<name>Identifier</name>
<value><string>Default</string></value>
</member>
<member>
<name>Name</name>
<value><string>0</string></value>
</member>
<member>
<name>Value</name>
<value><string>Yes, that is the correct equation.</string></value>
</member>
</struct></value>
</data></array></value>
</member>
<member>
<name>Name</name>
<value><string>Attempts</string></value>
</member>
</struct></value>
</data></array></value>
</member>
<member>
<name>Name</name>
<value><string>Correct</string></value>
</member>
</struct></value>
<value><struct>
<member>
<name>Kind</name>
<value><string>Struct</string></value>
</member>
<member>
<name>CondPath</name>
<value><string></string></value>
</member>
<member>
<name>Value</name>
<value><array><data>
<value><struct>
<member>
<name>Kind</name>
<value><string>Derived</string></value>
</member>
<member>
<name>Expression</name>
<value><string>True</string></value>
</member>
<member>
<name>Name</name>
<value><string>Expression</string></value>
</member>
<member>
<name>EvalMode</name>
<value><string>Dynamic</string></value>
</member>
</struct></value>
<value><struct>
<member>
<name>Kind</name>
<value><string>Array</string></value>
</member>
<member>
<name>CondPath</name>
<value><string></string></value>
</member>
<member>
<name>Value</name>
<value><array><data>
<value><struct>
<member>
<name>Kind</name>
<value><string>String</string></value>
</member>
<member>
<name>Identifier</name>
<value><string>Default</string></value>
</member>
<member>
<name>Name</name>
<value><string>0</string></value>
</member>
<member>
<name>Value</name>
<value><string>Your answer is incorrect.</string></value>
</member>
</struct></value>
</data></array></value>
</member>
<member>
<name>Name</name>
<value><string>Attempts</string></value>
</member>
</struct></value>
</data></array></value>
</member>
<member>
<name>Name</name>
<value><string>Default_Incorrect</string></value>
</member>
</struct></value>
<value><struct>
<member>
<name>Kind</name>
<value><string>Struct</string></value>
</member>
<member>
<name>CondPath</name>
<value><string></string></value>
</member>
<member>
<name>Value</name>
<value><array><data>
<value><struct>
<member>
<name>Kind</name>
<value><string>Derived</string></value>
</member>
<member>
<name>Expression</name>
<value><string>Response.Q1=='V1'</string></value>
</member>
<member>
<name>Name</name>
<value><string>Expression</string></value>
</member>
<member>
<name>EvalMode</name>
<value><string>Dynamic</string></value>
</member>
</struct></value>
<value><struct>
<member>
<name>Kind</name>
<value><string>Array</string></value>
</member>
<member>
<name>CondPath</name>
<value><string></string></value>
</member>
<member>
<name>Value</name>
<value><array><data>
<value><struct>
<member>
<name>Kind</name>
<value><string>String</string></value>
</member>
<member>
<name>Identifier</name>
<value><string>Default</string></value>
</member>
<member>
<name>Name</name>
<value><string>0</string></value>
</member>
<member>
<name>Value</name>
<value><string>The radius must be used in this equation, not the diameter.</string></value>
</member>
</struct></value>
</data></array></value>
</member>
<member>
<name>Name</name>
<value><string>Attempts</string></value>
</member>
</struct></value>
</data></array></value>
</member>
<member>
<name>Name</name>
<value><string>not diameter</string></value>
</member>
</struct></value>
<value><struct>
<member>
<name>Kind</name>
<value><string>Struct</string></value>
</member>
<member>
<name>CondPath</name>
<value><string></string></value>
</member>
<member>
<name>Value</name>
<value><array><data>
<value><struct>
<member>
<name>Kind</name>
<value><string>Derived</string></value>
</member>
<member>
<name>Expression</name>
<value><string>Response.Q1=='V2'</string></value>
</member>
<member>
<name>Name</name>
<value><string>Expression</string></value>
</member>
<member>
<name>EvalMode</name>
<value><string>Dynamic</string></value>
</member>
</struct></value>
<value><struct>
<member>
<name>Kind</name>
<value><string>Array</string></value>
</member>
<member>
<name>CondPath</name>
<value><string></string></value>
</member>
<member>
<name>Value</name>
<value><array><data>
<value><struct>
<member>
<name>Kind</name>
<value><string>String</string></value>
</member>
<member>
<name>Identifier</name>
<value><string>Default</string></value>
</member>
<member>
<name>Name</name>
<value><string>0</string></value>
</member>
<member>
<name>Value</name>
<value><string>A factor of 4/3 is missing from this expression.</string></value>
</member>
</struct></value>
</data></array></value>
</member>
<member>
<name>Name</name>
<value><string>Attempts</string></value>
</member>
</struct></value>
</data></array></value>
</member>
<member>
<name>Name</name>
<value><string>missing factor</string></value>
</member>
</struct></value>
<value><struct>
<member>
<name>Kind</name>
<value><string>Struct</string></value>
</member>
<member>
<name>CondPath</name>
<value><string></string></value>
</member>
<member>
<name>Value</name>
<value><array><data>
<value><struct>
<member>
<name>Kind</name>
<value><string>Derived</string></value>
</member>
<member>
<name>Expression</name>
<value><string>Response.Q1=='V3'</string></value>
</member>
<member>
<name>Name</name>
<value><string>Expression</string></value>
</member>
<member>
<name>EvalMode</name>
<value><string>Dynamic</string></value>
</member>
</struct></value>
<value><struct>
<member>
<name>Kind</name>
<value><string>Array</string></value>
</member>
<member>
<name>CondPath</name>
<value><string></string></value>
</member>
<member>
<name>Value</name>
<value><array><data>
<value><struct>
<member>
<name>Kind</name>
<value><string>String</string></value>
</member>
<member>
<name>Identifier</name>
<value><string>Default</string></value>
</member>
<member>
<name>Name</name>
<value><string>0</string></value>
</member>
<member>
<name>Value</name>
<value><string>The dimensions of this equation are not dimensions of volume.</string></value>
</member>
</struct></value>
</data></array></value>
</member>
<member>
<name>Name</name>
<value><string>Attempts</string></value>
</member>
</struct></value>
</data></array></value>
</member>
<member>
<name>Name</name>
<value><string>cube instead</string></value>
</member>
</struct></value>
</data></array></value>
</member>
<member>
<name>Name</name>
<value><string>Q1</string></value>
</member>
</struct></value>
</data></array></value>
</member>
<member>
<name>Data</name>
<value><array><data>
<value><struct>
<member>
<name>Definition</name>
<value><string>
def initialize():
    "Called before the start of the problem"
    pass
</string></value>
</member>
<member>
<name>Kind</name>
<value><string>Function</string></value>
</member>
<member>
<name>Description</name>
<value><string>
If defined, this function is called before the start
of the problem to perform any required initialization.
</string></value>
</member>
<member>
<name>Name</name>
<value><string>initialize</string></value>
</member>
</struct></value>
<value><struct>
<member>
<name>Definition</name>
<value><string>
def finalize():
    "Called at the conclusion of the problem"
    pass
</string></value>
</member>
<member>
<name>Kind</name>
<value><string>Function</string></value>
</member>
<member>
<name>Description</name>
<value><string>
If defined, this function is called at the end of the problem
to perform any required finalization.
</string></value>
</member>
<member>
<name>Name</name>
<value><string>finalize</string></value>
</member>
</struct></value>
<value><struct>
<member>
<name>Definition</name>
<value><string>
def isCorrect():
    "Determines that problem is correctly answered"
    for q in Assessment.Elements:
        if hasattr(Response, q['Name']):
            fb = getattr(Feedback, q['Name'])
            if fb['Correct']['Expression'] is not True:
                return False
    return True
</string></value>
</member>
<member>
<name>Kind</name>
<value><string>Function</string></value>
</member>
<member>
<name>Description</name>
<value><string>
This function is used to determine if the current
problem has been answered correctly.
Alter with extreme care.  Do not delete!
</string></value>
</member>
<member>
<name>Name</name>
<value><string>isCorrect</string></value>
</member>
</struct></value>
</data></array></value>
</member>
<member>
<name>NextIncorrect</name>
<value><string>Continue</string></value>
</member>
<member>
<name>Start</name>
<value><boolean>1</boolean></value>
</member>
<member>
<name>Attempts</name>
<value><int>1</int></value>
</member>
<member>
<name>NextCorrect</name>
<value><string>Sphere Volume</string></value>
</member>
<member>
<name>Assessment</name>
<value><struct>
<member>
<name>Kind</name>
<value><string>Assessment</string></value>
</member>
<member>
<name>Elements</name>
<value><array><data>
<value><struct>
<member>
<name>Kind</name>
<value><string>MultipleChoice</string></value>
</member>
<member>
<name>QuestionText</name>
<value><string>The equation for the volume of a sphere is:</string></value>
</member>
<member>
<name>Default</name>
<value><string></string></value>
</member>
<member>
<name>Choices</name>
<value><array><data>
<value><struct>
<member>
<name>Row</name>
<value><int>1</int></value>
</member>
<member>
<name>Type</name>
<value><string>Text</string></value>
</member>
<member>
<name>Name</name>
<value><string>V</string></value>
</member>
<member>
<name>Value</name>
<value><string>&lt;img src='Dynamic/Resources/Global/V.gif'&gt;</string></value>
</member>
<member>
<name>Col</name>
<value><int>1</int></value>
</member>
</struct></value>
<value><struct>
<member>
<name>Row</name>
<value><int>1</int></value>
</member>
<member>
<name>Type</name>
<value><string>Text</string></value>
</member>
<member>
<name>Name</name>
<value><string>V1</string></value>
</member>
<member>
<name>Value</name>
<value><string>&lt;img src='Dynamic/Resources/ Global /V1.gif'&gt;</string></value>
</member>
<member>
<name>Col</name>
<value><int>2</int></value>
</member>
</struct></value>
<value><struct>
<member>
<name>Row</name>
<value><int>1</int></value>
</member>
<member>
<name>Type</name>
<value><string>Text</string></value>
</member>
<member>
<name>Name</name>
<value><string>V2</string></value>
</member>
<member>
<name>Value</name>
<value><string>&lt;img src='Dynamic/Resources/ Global /V2.gif'&gt;</string></value>
</member>
<member>
<name>Col</name>
<value><int>3</int></value>
</member>
</struct></value>
<value><struct>
<member>
<name>Row</name>
<value><int>1</int></value>
</member>
<member>
<name>Type</name>
<value><string>Text</string></value>
</member>
<member>
<name>Name</name>
<value><string>V3</string></value>
</member>
<member>
<name>Value</name>
<value><string>&lt;img src='Dynamic/Resources/ Global /V3.gif'&gt;</string></value>
</member>
<member>
<name>Col</name>
<value><int>4</int></value>
</member>
</struct></value>
</data></array></value>
</member>
<member>
<name>SingleAnswer</name>
<value><boolean>1</boolean></value>
</member>
<member>
<name>Validate</name>
<value><boolean>1</boolean></value>
</member>
<member>
<name>Condition</name>
<value><boolean>1</boolean></value>
</member>
<member>
<name>Name</name>
<value><string>Q1</string></value>
</member>
</struct></value>
</data></array></value>
</member>
<member>
<name>Validate</name>
<value><boolean>1</boolean></value>
</member>
<member>
<name>Preface</name>
<value><string>Select the correct equation for the volume of a sphere with radius R and diameter D.</string></value>
</member>
<member>
<name>Title</name>
<value><string>Equation for the Volume of a Sphere</string></value>
</member>
</struct></value>
</member>
<member>
<name>Resources</name>
<value><array><data>
</data></array></value>
</member>
<member>
<name>Name</name>
<value><string>Sphere Equation</string></value>
</member>
</struct></value>
<value><struct>
<member>
<name>Feedback</name>
<value><array><data>
<value><struct>
<member>
<name>Kind</name>
<value><string>Struct</string></value>
</member>
<member>
<name>CondPath</name>
<value><string></string></value>
</member>
<member>
<name>Value</name>
<value><array><data>
<value><struct>
<member>
<name>Kind</name>
<value><string>Struct</string></value>
</member>
<member>
<name>CondPath</name>
<value><string></string></value>
</member>
<member>
<name>Value</name>
<value><array><data>
<value><struct>
<member>
<name>Kind</name>
<value><string>Derived</string></value>
</member>
<member>
<name>Expression</name>
<value><string>Response.Q1=='&lt;py&gt;Data.V&lt;/py&gt;'</string></value>
</member>
<member>
<name>Name</name>
<value><string>Expression</string></value>
</member>
<member>
<name>EvalMode</name>
<value><string>Dynamic</string></value>
</member>
</struct></value>
<value><struct>
<member>
<name>Kind</name>
<value><string>Array</string></value>
</member>
<member>
<name>CondPath</name>
<value><string></string></value>
</member>
<member>
<name>Value</name>
<value><array><data>
<value><struct>
<member>
<name>Kind</name>
<value><string>String</string></value>
</member>
<member>
<name>Identifier</name>
<value><string>Default</string></value>
</member>
<member>
<name>Name</name>
<value><string>0</string></value>
</member>
<member>
<name>Value</name>
<value><string>That is the correct volume.</string></value>
</member>
</struct></value>
</data></array></value>
</member>
<member>
<name>Name</name>
<value><string>Attempts</string></value>
</member>
</struct></value>
</data></array></value>
</member>
<member>
<name>Name</name>
<value><string>Correct</string></value>
</member>
</struct></value>
<value><struct>
<member>
<name>Kind</name>
<value><string>Struct</string></value>
</member>
<member>
<name>CondPath</name>
<value><string></string></value>
</member>
<member>
<name>Value</name>
<value><array><data>
<value><struct>
<member>
<name>Kind</name>
<value><string>Derived</string></value>
</member>
<member>
<name>Expression</name>
<value><string>Response.Q1 == ‘No Answer’</string></value>
</member>
<member>
<name>Name</name>
<value><string>Expression</string></value>
</member>
<member>
<name>EvalMode</name>
<value><string>Dynamic</string></value>
</member>
</struct></value>
<value><struct>
<member>
<name>Kind</name>
<value><string>Array</string></value>
</member>
<member>
<name>CondPath</name>
<value><string></string></value>
</member>
<member>
<name>Value</name>
<value><array><data>
<value><struct>
<member>
<name>Kind</name>
<value><string>String</string></value>
</member>
<member>
<name>Identifier</name>
<value><string>Default</string></value>
</member>
<member>
<name>Name</name>
<value><string>0</string></value>
</member>
<member>
<name>Value</name>
<value><string>You must select a numerical answer from the list.</string></value>
</member>
</struct></value>
<value><struct>
<member>
<name>Kind</name>
<value><string>String</string></value>
</member>
<member>
<name>Identifier</name>
<value><string>last</string></value>
</member>
<member>
<name>Name</name>
<value><string>1</string></value>
</member>
<member>
<name>Value</name>
<value><string>That was your final attempt. The correct volume is &lt;py&gt;Data.V&lt;/py&gt;.</string></value>
</member>
</struct></value>
</data></array></value>
</member>
<member>
<name>Name</name>
<value><string>Attempts</string></value>
</member>
</struct></value>
</data></array></value>
</member>
<member>
<name>Name</name>
<value><string>Default_Incorrect</string></value>
</member>
</struct></value>
<value><struct>
<member>
<name>Kind</name>
<value><string>Struct</string></value>
</member>
<member>
<name>CondPath</name>
<value><string></string></value>
</member>
<member>
<name>Value</name>
<value><array><data>
<value><struct>
<member>
<name>Kind</name>
<value><string>Derived</string></value>
</member>
<member>
<name>Expression</name>
<value><string>Response.Q1=='&lt;py&gt;Data.V1&lt;/py&gt;'</string></value>
</member>
<member>
<name>Name</name>
<value><string>Expression</string></value>
</member>
<member>
<name>EvalMode</name>
<value><string>Dynamic</string></value>
</member>
</struct></value>
<value><struct>
<member>
<name>Kind</name>
<value><string>Array</string></value>
</member>
<member>
<name>CondPath</name>
<value><string></string></value>
</member>
<member>
<name>Value</name>
<value><array><data>
<value><struct>
<member>
<name>Kind</name>
<value><string>String</string></value>
</member>
<member>
<name>Identifier</name>
<value><string>Default</string></value>
</member>
<member>
<name>Name</name>
<value><string>0</string></value>
</member>
<member>
<name>Value</name>
<value><string>You appear to have used diameter instead of radius in your calculation.</string></value>
</member>
</struct></value>
<value><struct>
<member>
<name>Kind</name>
<value><string>String</string></value>
</member>
<member>
<name>Identifier</name>
<value><string>last</string></value>
</member>
<member>
<name>Name</name>
<value><string>1</string></value>
</member>
<member>
<name>Value</name>
<value><string>That was your final attempt. The correct volume is &lt;py&gt;Data.V&lt;/py&gt;.</string></value>
</member>
</struct></value>
</data></array></value>
</member>
<member>
<name>Name</name>
<value><string>Attempts</string></value>
</member>
</struct></value>
</data></array></value>
</member>
<member>
<name>Name</name>
<value><string>not diameter</string></value>
</member>
</struct></value>
<value><struct>
<member>
<name>Kind</name>
<value><string>Struct</string></value>
</member>
<member>
<name>CondPath</name>
<value><string></string></value>
</member>
<member>
<name>Value</name>
<value><array><data>
<value><struct>
<member>
<name>Kind</name>
<value><string>Derived</string></value>
</member>
<member>
<name>Expression</name>
<value><string>Response.Q1=='&lt;py&gt;Data.V2&lt;/py&gt;'</string></value>
</member>
<member>
<name>Name</name>
<value><string>Expression</string></value>
</member>
<member>
<name>EvalMode</name>
<value><string>Dynamic</string></value>
</member>
</struct></value>
<value><struct>
<member>
<name>Kind</name>
<value><string>Array</string></value>
</member>
<member>
<name>CondPath</name>
<value><string></string></value>
</member>
<member>
<name>Value</name>
<value><array><data>
<value><struct>
<member>
<name>Kind</name>
<value><string>String</string></value>
</member>
<member>
<name>Identifier</name>
<value><string>Default</string></value>
</member>
<member>
<name>Name</name>
<value><string>0</string></value>
</member>
<member>
<name>Value</name>
<value><string>You appear to have forgotten a factor of 4/3 in your volume calculation.</string></value>
</member>
</struct></value>
<value><struct>
<member>
<name>Kind</name>
<value><string>String</string></value>
</member>
<member>
<name>Identifier</name>
<value><string>last</string></value>
</member>
<member>
<name>Name</name>
<value><string>1</string></value>
</member>
<member>
<name>Value</name>
<value><string>That was your final attempt. The correct volume is &lt;py&gt;Data.V&lt;/py&gt;.</string></value>
</member>
</struct></value>
</data></array></value>
</member>
<member>
<name>Name</name>
<value><string>Attempts</string></value>
</member>
</struct></value>
</data></array></value>
</member>
<member>
<name>Name</name>
<value><string>missing factor</string></value>
</member>
</struct></value>
<value><struct>
<member>
<name>Kind</name>
<value><string>Struct</string></value>
</member>
<member>
<name>CondPath</name>
<value><string></string></value>
</member>
<member>
<name>Value</name>
<value><array><data>
<value><struct>
<member>
<name>Kind</name>
<value><string>Derived</string></value>
</member>
<member>
<name>Expression</name>
<value><string>Response.Q1=='&lt;py&gt;Data.V3&lt;/py&gt;'</string></value>
</member>
<member>
<name>Name</name>
<value><string>Expression</string></value>
</member>
<member>
<name>EvalMode</name>
<value><string>Dynamic</string></value>
</member>
</struct></value>
<value><struct>
<member>
<name>Kind</name>
<value><string>Array</string></value>
</member>
<member>
<name>CondPath</name>
<value><string></string></value>
</member>
<member>
<name>Value</name>
<value><array><data>
<value><struct>
<member>
<name>Kind</name>
<value><string>String</string></value>
</member>
<member>
<name>Identifier</name>
<value><string>Default</string></value>
</member>
<member>
<name>Name</name>
<value><string>0</string></value>
</member>
<member>
<name>Value</name>
<value><string>You appear to have squared the radius instead of cubing it in your volume calculation.</string></value>
</member>
</struct></value>
<value><struct>
<member>
<name>Kind</name>
<value><string>String</string></value>
</member>
<member>
<name>Identifier</name>
<value><string>last</string></value>
</member>
<member>
<name>Name</name>
<value><string>1</string></value>
</member>
<member>
<name>Value</name>
<value><string>That was your final attempt. The correct volume is &lt;py&gt;Data.V&lt;/py&gt;.</string></value>
</member>
</struct></value>
</data></array></value>
</member>
<member>
<name>Name</name>
<value><string>Attempts</string></value>
</member>
</struct></value>
</data></array></value>
</member>
<member>
<name>Name</name>
<value><string>cube instead</string></value>
</member>
</struct></value>
</data></array></value>
</member>
<member>
<name>Name</name>
<value><string>Q1</string></value>
</member>
</struct></value>
</data></array></value>
</member>
<member>
<name>Data</name>
<value><array><data>
<value><struct>
<member>
<name>Definition</name>
<value><string>
def initialize():
    "Called before the start of the problem"
    pass
</string></value>
</member>
<member>
<name>Kind</name>
<value><string>Function</string></value>
</member>
<member>
<name>Name</name>
<value><string>initialize</string></value>
</member>
<member>
<name>CondPath</name>
<value><string>initialize</string></value>
</member>
<member>
<name>Description</name>
<value><string>
If defined, this function is called before the start
of the problem to perform any required initialization.
</string></value>
</member>
</struct></value>
<value><struct>
<member>
<name>Definition</name>
<value><string>
def finalize():
    "Called at the conclusion of the problem"
    pass
</string></value>
</member>
<member>
<name>Kind</name>
<value><string>Function</string></value>
</member>
<member>
<name>Name</name>
<value><string>finalize</string></value>
</member>
<member>
<name>CondPath</name>
<value><string>finalize</string></value>
</member>
<member>
<name>Description</name>
<value><string>
If defined, this function is called at the end of the problem
to perform any required finalization.
</string></value>
</member>
</struct></value>
<value><struct>
<member>
<name>Definition</name>
<value><string>
def isCorrect():
    "Determines that problem is correctly answered"
    for q in Assessment.Elements:
        if hasattr(Response, q['Name']):
            fb = getattr(Feedback, q['Name'])
            if fb['Correct']['Expression'] is not True:
                return False
    return True
</string></value>
</member>
<member>
<name>Kind</name>
<value><string>Function</string></value>
</member>
<member>
<name>Name</name>
<value><string>isCorrect</string></value>
</member>
<member>
<name>CondPath</name>
<value><string>isCorrect</string></value>
</member>
<member>
<name>Description</name>
<value><string>
This function is used to determine if the current
problem has been answered correctly.
Alter with extreme care.  Do not delete!
</string></value>
</member>
</struct></value>
<value><struct>
<member>
<name>Kind</name>
<value><string>Derived</string></value>
</member>
<member>
<name>Description</name>
<value><string></string></value>
</member>
<member>
<name>EvalMode</name>
<value><string>Initial</string></value>
</member>
<member>
<name>Name</name>
<value><string>R</string></value>
</member>
<member>
<name>Expression</name>
<value><string>random.randrange(1,15,1)</string></value>
</member>
<member>
<name>CondPath</name>
<value><string>R</string></value>
</member>
</struct></value>
<value><struct>
<member>
<name>Kind</name>
<value><string>Derived</string></value>
</member>
<member>
<name>Description</name>
<value><string></string></value>
</member>
<member>
<name>EvalMode</name>
<value><string>Initial</string></value>
</member>
<member>
<name>Name</name>
<value><string>V</string></value>
</member>
<member>
<name>Expression</name>
<value><string>int(4.*pi*pow(R,3)/3.+.5)</string></value>
</member>
<member>
<name>CondPath</name>
<value><string>V</string></value>
</member>
</struct></value>
<value><struct>
<member>
<name>Kind</name>
<value><string>Derived</string></value>
</member>
<member>
<name>Description</name>
<value><string></string></value>
</member>
<member>
<name>EvalMode</name>
<value><string>Initial</string></value>
</member>
<member>
<name>Name</name>
<value><string>V1</string></value>
</member>
<member>
<name>Expression</name>
<value><string>int(4.*pi*pow(2*R,3)/3.+.5)</string></value>
</member>
<member>
<name>CondPath</name>
<value><string>V1</string></value>
</member>
</struct></value>
<value><struct>
<member>
<name>Kind</name>
<value><string>Derived</string></value>
</member>
<member>
<name>Description</name>
<value><string></string></value>
</member>
<member>
<name>EvalMode</name>
<value><string>Initial</string></value>
</member>
<member>
<name>Name</name>
<value><string>V2</string></value>
</member>
<member>
<name>Expression</name>
<value><string>int(pi*pow(R,3)+.5)</string></value>
</member>
<member>
<name>CondPath</name>
<value><string>V2</string></value>
</member>
</struct></value>
<value><struct>
<member>
<name>Kind</name>
<value><string>Derived</string></value>
</member>
<member>
<name>Description</name>
<value><string></string></value>
</member>
<member>
<name>EvalMode</name>
<value><string>Initial</string></value>
</member>
<member>
<name>Name</name>
<value><string>V3</string></value>
</member>
<member>
<name>Expression</name>
<value><string>int(4.*pi*pow(R,2)/3.+.5)</string></value>
</member>
<member>
<name>CondPath</name>
<value><string>V3</string></value>
</member>
</struct></value>
</data></array></value>
</member>
<member>
<name>NextIncorrect</name>
<value><string>None</string></value>
</member>
<member>
<name>Start</name>
<value><boolean>0</boolean></value>
</member>
<member>
<name>Attempts</name>
<value><int>2</int></value>
</member>
<member>
<name>NextCorrect</name>
<value><string>None</string></value>
</member>
<member>
<name>Assessment</name>
<value><struct>
<member>
<name>Kind</name>
<value><string>Assessment</string></value>
</member>
<member>
<name>Elements</name>
<value><array><data>
<value><struct>
<member>
<name>Kind</name>
<value><string>Selection</string></value>
</member>
<member>
<name>QuestionText</name>
<value><string>The sphere volume is</string></value>
</member>
<member>
<name>Default</name>
<value><string></string></value>
</member>
<member>
<name>TextAfter</name>
<value><string>cm&lt;sup&gt;3&lt;/sup&gt;</string></value>
</member>
<member>
<name>Name</name>
<value><string>Q1</string></value>
</member>
<member>
<name>SingleAnswer</name>
<value><boolean>1</boolean></value>
</member>
<member>
<name>Validate</name>
<value><boolean>1</boolean></value>
</member>
<member>
<name>Options</name>
<value><array><data>
<value><string>No Answer</string></value>
<value><string>&lt;py&gt;Data.V&lt;/py&gt;</string></value>
<value><string>&lt;py&gt;Data.V1&lt;/py&gt;</string></value>
<value><string>&lt;py&gt;Data.V2&lt;/py&gt;</string></value>
<value><string>&lt;py&gt;Data.V3&lt;/py&gt;</string></value>
</data></array></value>
</member>
<member>
<name>Condition</name>
<value><boolean>1</boolean></value>
</member>
<member>
<name>Size</name>
<value><int>1</int></value>
</member>
</struct></value>
</data></array></value>
</member>
<member>
<name>Validate</name>
<value><boolean>1</boolean></value>
</member>
<member>
<name>Preface</name>
<value><string>Select the volume of a sphere (cm&lt;sup&gt;3&lt;/sup&gt;) with a radius of &lt;py&gt;Data.R&lt;/py&gt; cm.</string></value>
</member>
<member>
<name>Title</name>
<value><string>Volume of a Sphere</string></value>
</member>
</struct></value>
</member>
<member>
<name>Resources</name>
<value><array><data>
</data></array></value>
</member>
<member>
<name>Name</name>
<value><string>Sphere Volume</string></value>
</member>
</struct></value>
<value><struct>
<member>
<name>Feedback</name>
<value><array><data>
<value><struct>
<member>
<name>Kind</name>
<value><string>Struct</string></value>
</member>
<member>
<name>CondPath</name>
<value><string></string></value>
</member>
<member>
<name>Value</name>
<value><array><data>
<value><struct>
<member>
<name>Kind</name>
<value><string>Struct</string></value>
</member>
<member>
<name>CondPath</name>
<value><string></string></value>
</member>
<member>
<name>Value</name>
<value><array><data>
<value><struct>
<member>
<name>Kind</name>
<value><string>Derived</string></value>
</member>
<member>
<name>Expression</name>
<value><string>Response.Q1 == True</string></value>
</member>
<member>
<name>Name</name>
<value><string>Expression</string></value>
</member>
<member>
<name>EvalMode</name>
<value><string>Dynamic</string></value>
</member>
</struct></value>
<value><struct>
<member>
<name>Kind</name>
<value><string>Array</string></value>
</member>
<member>
<name>CondPath</name>
<value><string></string></value>
</member>
<member>
<name>Value</name>
<value><array><data>
<value><struct>
<member>
<name>Kind</name>
<value><string>String</string></value>
</member>
<member>
<name>Identifier</name>
<value><string>Default</string></value>
</member>
<member>
<name>Name</name>
<value><string>0</string></value>
</member>
<member>
<name>Value</name>
<value><string>Okay. Please press the green arrow to return to the previous problem.</string></value>
</member>
</struct></value>
</data></array></value>
</member>
<member>
<name>Name</name>
<value><string>Attempts</string></value>
</member>
</struct></value>
</data></array></value>
</member>
<member>
<name>Name</name>
<value><string>Correct</string></value>
</member>
</struct></value>
<value><struct>
<member>
<name>Kind</name>
<value><string>Struct</string></value>
</member>
<member>
<name>CondPath</name>
<value><string></string></value>
</member>
<member>
<name>Value</name>
<value><array><data>
<value><struct>
<member>
<name>Kind</name>
<value><string>Derived</string></value>
</member>
<member>
<name>Expression</name>
<value><string>True</string></value>
</member>
<member>
<name>Name</name>
<value><string>Expression</string></value>
</member>
<member>
<name>EvalMode</name>
<value><string>Dynamic</string></value>
</member>
</struct></value>
<value><struct>
<member>
<name>Kind</name>
<value><string>Array</string></value>
</member>
<member>
<name>CondPath</name>
<value><string></string></value>
</member>
<member>
<name>Value</name>
<value><array><data>
<value><struct>
<member>
<name>Kind</name>
<value><string>String</string></value>
</member>
<member>
<name>Identifier</name>
<value><string>Default</string></value>
</member>
<member>
<name>Name</name>
<value><string>0</string></value>
</member>
<member>
<name>Value</name>
<value><string>The correct equation for the volume of a sphere is: &lt;br&gt;&lt;br&gt;&lt;img src='Dynamic/Resources/Global/V.gif'&gt;</string></value>
</member>
</struct></value>
</data></array></value>
</member>
<member>
<name>Name</name>
<value><string>Attempts</string></value>
</member>
</struct></value>
</data></array></value>
</member>
<member>
<name>Name</name>
<value><string>Default_Incorrect</string></value>
</member>
</struct></value>
</data></array></value>
</member>
<member>
<name>Name</name>
<value><string>Q1</string></value>
</member>
</struct></value>
</data></array></value>
</member>
<member>
<name>Data</name>
<value><array><data>
<value><struct>
<member>
<name>Definition</name>
<value><string>
def initialize():
    "Called before the start of the problem"
    pass
</string></value>
</member>
<member>
<name>Kind</name>
<value><string>Function</string></value>
</member>
<member>
<name>Description</name>
<value><string>
If defined, this function is called before the start
of the problem to perform any required initialization.
</string></value>
</member>
<member>
<name>Name</name>
<value><string>initialize</string></value>
</member>
</struct></value>
<value><struct>
<member>
<name>Definition</name>
<value><string>
def finalize():
    "Called at the conclusion of the problem"
    pass
</string></value>
</member>
<member>
<name>Kind</name>
<value><string>Function</string></value>
</member>
<member>
<name>Description</name>
<value><string>
If defined, this function is called at the end of the problem
to perform any required finalization.
</string></value>
</member>
<member>
<name>Name</name>
<value><string>finalize</string></value>
</member>
</struct></value>
<value><struct>
<member>
<name>Definition</name>
<value><string>
def isCorrect():
    "Determines that problem is correctly answered"
    for q in Assessment.Elements:
        if hasattr(Response, q['Name']):
            fb = getattr(Feedback, q['Name'])
            if fb['Correct']['Expression'] is not True:
                return False
    return True
</string></value>
</member>
<member>
<name>Kind</name>
<value><string>Function</string></value>
</member>
<member>
<name>Description</name>
<value><string>
This function is used to determine if the current
problem has been answered correctly.
Alter with extreme care.  Do not delete!
</string></value>
</member>
<member>
<name>Name</name>
<value><string>isCorrect</string></value>
</member>
</struct></value>
</data></array></value>
</member>
<member>
<name>NextIncorrect</name>
<value><string>Sphere Volume</string></value>
</member>
<member>
<name>Start</name>
<value><boolean>0</boolean></value>
</member>
<member>
<name>Attempts</name>
<value><int>1</int></value>
</member>
<member>
<name>NextCorrect</name>
<value><string>Sphere Equation</string></value>
</member>
<member>
<name>Assessment</name>
<value><struct>
<member>
<name>Kind</name>
<value><string>Assessment</string></value>
</member>
<member>
<name>Elements</name>
<value><array><data>
<value><struct>
<member>
<name>Kind</name>
<value><string>TrueFalse</string></value>
</member>
<member>
<name>FalseLabel</name>
<value><string>Move on to the next problem</string></value>
</member>
<member>
<name>Name</name>
<value><string>Q1</string></value>
</member>
<member>
<name>Default</name>
<value><string>Return to the previous problem</string></value>
</member>
<member>
<name>Validate</name>
<value><boolean>1</boolean></value>
</member>
<member>
<name>TrueLabel</name>
<value><string>Return to the previous problem</string></value>
</member>
<member>
<name>Condition</name>
<value><boolean>1</boolean></value>
</member>
<member>
<name>QuestionText</name>
<value><string>Choose where to go from here.</string></value>
</member>
</struct></value>
</data></array></value>
</member>
<member>
<name>Validate</name>
<value><boolean>1</boolean></value>
</member>
<member>
<name>Preface</name>
<value><string></string></value>
</member>
<member>
<name>Title</name>
<value><string>Try Again?</string></value>
</member>
</struct></value>
</member>
<member>
<name>Resources</name>
<value><array><data>
</data></array></value>
</member>
<member>
<name>Name</name>
<value><string>Continue</string></value>
</member>
</struct></value>
</data></array></value>
</member>
<member>
<name>GlobalResources</name>
<value><array><data>
<value><struct>
<member>
<name>Kind</name>
<value><string>Base64</string></value>
</member>
<member>
<name>Name</name>
<value><string>V.gif</string></value>
</member>
<member>
<name>CondPath</name>
<value><string>V.gif</string></value>
</member>
<member>
<name>Value</name>
<value><string>R0lGODlhQwApAHcAMSH+GlNvZnR3YXJlOiBNaWNyb3NvZnQgT2ZmaWNlACH5BAEAAAAALAIABAA/ACIAgAAAAAAAAAKXhI+pm+EMo5zQPYqztkH7v3AdSHqPVabYealuOKLvjIgyyNHwSIp60yqxcjlhMGI73GS3X8VnYPKOThigecnyqjYfqvil0rqd7u66rZFN4XJxJ3ay0G8FtLdWE+/2Zt/MhhY1x+BXRUcnlaa0yKXlZXgoOUmZwlfJ5taIOfHIabn5SREp2llXmkGKihS3yuq60Qo7eKpSAAA7
</string></value>
</member>
<member>
<name>Description</name>
<value><string></string></value>
</member>
</struct></value>
<value><struct>
<member>
<name>Kind</name>
<value><string>Base64</string></value>
</member>
<member>
<name>Name</name>
<value><string>V1.gif</string></value>
</member>
<member>
<name>CondPath</name>
<value><string>V1.gif</string></value>
</member>
<member>
<name>Value</name>
<value><string>R0lGODlhRQApAHcAMSH+GlNvZnR3YXJlOiBNaWNyb3NvZnQgT2ZmaWNlACH5BAEAAAAALAIABABAACIAgAAAAAAAAAKWhI+pi+EMo5zRPYqzBjbsDyadF5baY5kqhV7rq1wpTB/jXHa16Ob6bsCpWrofSFi5NVwzJJDnMTZJHOpzwezJSD3gTUrkEq/Vb9ZqazHM6ElxlG6Xu9ew1TmXY9ho9lJuhGX2oYaDV0b2lxcHQfc0NZgoOUk5FFh5Moa5saW3yeL5KXEomkRa2uiIarrKGdoKBWt6GlIAADs=
</string></value>
</member>
<member>
<name>Description</name>
<value><string></string></value>
</member>
</struct></value>
<value><struct>
<member>
<name>Kind</name>
<value><string>Base64</string></value>
</member>
<member>
<name>Name</name>
<value><string>V2.gif</string></value>
</member>
<member>
<name>CondPath</name>
<value><string>V2.gif</string></value>
</member>
<member>
<name>Value</name>
<value><string>R0lGODlhNwAVAHcAMSH+GlNvZnR3YXJlOiBNaWNyb3NvZnQgT2ZmaWNlACH5BAEAAAAALAIAAwAyAA4AgAAAAAAAAAJThI+pyx0fmpwUwVezTvh2uEleZIAlBpih4x0mmpIrG8vxic/1+EXX6YOFeMGWAiS0EJW9nY3z07mCziczuRpVWdircXqrhRcqKdJYVkqnJN5OUQAAOw==
</string></value>
</member>
<member>
<name>Description</name>
<value><string></string></value>
</member>
</struct></value>
<value><struct>
<member>
<name>Kind</name>
<value><string>Base64</string></value>
</member>
<member>
<name>Name</name>
<value><string>V3.gif</string></value>
</member>
<member>
<name>CondPath</name>
<value><string>V3.gif</string></value>
</member>
<member>
<name>Value</name>
<value><string>R0lGODlhRAApAHcAMSH+GlNvZnR3YXJlOiBNaWNyb3NvZnQgT2ZmaWNlACH5BAEAAAAALAIABAA/ACIAgAAAAAAAAAKShI+pm+EMo5zQPYqztkH7v3AdSHqPVabYealuOKLvjIgyyNHwSIp600rZWMHPLWJTXGTH3+7YivKcDOIhuJw6hyhmrlvUcYdVVpm8AScrOSoQwEW2cWPgWGvH1+KmjjW8p7dFlCUIZyhWqIbo1uj4SNcEmeYHODlReCnEqCnH2fn0CapkOeppaiSKaiC5mlcKUgAAOw==
</string></value>
</member>
<member>
<name>Description</name>
<value><string></string></value>
</member>
</struct></value>
</data></array></value>
</member>
</struct></value>
</param>
</params>
