<params>
<param>
<value><struct>
<member>
<name>GlobalData</name>
<value><array><data>
<value><struct>
<member>
<name>Kind</name>
<value><string>Boolean</string></value>
</member>
<member>
<name>Description</name>
<value><string>
If True, present an assignment introduction page with
content defined by IntroductionContent.
</string></value>
</member>
<member>
<name>Value</name>
<value><boolean>0</boolean></value>
</member>
<member>
<name>Name</name>
<value><string>Introduction</string></value>
</member>
</struct></value>
<value><struct>
<member>
<name>Kind</name>
<value><string>String</string></value>
</member>
<member>
<name>Description</name>
<value><string>Content for the assignment introduction, if presented.</string></value>
</member>
<member>
<name>Value</name>
<value><string>Temporary content for the introduction.</string></value>
</member>
<member>
<name>Name</name>
<value><string>IntroductionContent</string></value>
</member>
</struct></value>
<value><struct>
<member>
<name>Kind</name>
<value><string>String</string></value>
</member>
<member>
<name>Description</name>
<value><string>
Content for the page presented at the conclusion
of the assignment.
</string></value>
</member>
<member>
<name>Value</name>
<value><string>&lt;p&gt;The assignment is completed.&lt;/p&gt;</string></value>
</member>
<member>
<name>Name</name>
<value><string>FinishContent</string></value>
</member>
</struct></value>
<value><struct>
<member>
<name>Kind</name>
<value><string>Integer</string></value>
</member>
<member>
<name>Description</name>
<value><string>
(Readonly)
This item will contain the number of the current attempt.
</string></value>
</member>
<member>
<name>Value</name>
<value><int>1</int></value>
</member>
<member>
<name>Name</name>
<value><string>Attempt</string></value>
</member>
</struct></value>
<value><struct>
<member>
<name>Kind</name>
<value><string>Integer</string></value>
</member>
<member>
<name>Description</name>
<value><string>
(Readonly)
This item will contain the number of attempts given
to solve the current problem.
</string></value>
</member>
<member>
<name>Value</name>
<value><int>0</int></value>
</member>
<member>
<name>Name</name>
<value><string>Attempts</string></value>
</member>
</struct></value>
<value><struct>
<member>
<name>Kind</name>
<value><string>String</string></value>
</member>
<member>
<name>Description</name>
<value><string>
(Readonly)
This item will contain the name of the current problem.
</string></value>
</member>
<member>
<name>Value</name>
<value><string></string></value>
</member>
<member>
<name>Name</name>
<value><string>Problem</string></value>
</member>
</struct></value>
<value><struct>
<member>
<name>Kind</name>
<value><string>Struct</string></value>
</member>
<member>
<name>Name</name>
<value><string>Intervention</string></value>
</member>
<member>
<name>CondPath</name>
<value><string>Intervention</string></value>
</member>
<member>
<name>Value</name>
<value><array><data>
<value><struct>
<member>
<name>Kind</name>
<value><string>Derived</string></value>
</member>
<member>
<name>CondPath</name>
<value><string>Intervention['Condition']</string></value>
</member>
<member>
<name>EvalMode</name>
<value><string>Dynamic</string></value>
</member>
<member>
<name>Description</name>
<value><string>
If evaluates to True, then the courseware will
suspend after giving the feedback until the student
receives help by a human (instructor or TA).
</string></value>
</member>
<member>
<name>Expression</name>
<value><string>False</string></value>
</member>
<member>
<name>Name</name>
<value><string>Condition</string></value>
</member>
</struct></value>
<value><struct>
<member>
<name>Kind</name>
<value><string>String</string></value>
</member>
<member>
<name>Description</name>
<value><string>
If Condition evaluates to True, this content
is appended to the feedback to give the student
instructions to seek human help.
</string></value>
</member>
<member>
<name>Value</name>
<value><string>
&lt;p style="color:red"&gt;
You appear to be having difficulty with this problem.
&lt;b&gt;Please see your instructor.&lt;/b&gt;
Afterwards, you will be able to finish the assignment.
&lt;/p&gt;
</string></value>
</member>
<member>
<name>Name</name>
<value><string>Content</string></value>
</member>
</struct></value>
</data></array></value>
</member>
<member>
<name>Description</name>
<value><string>Definitions for instructor interventions.</string></value>
</member>
</struct></value>
<value><struct>
<member>
<name>Kind</name>
<value><string>Boolean</string></value>
</member>
<member>
<name>Description</name>
<value><string>
If True, present feedback following each question on the Problem page,
rather than on a separate Feedback page.
</string></value>
</member>
<member>
<name>Value</name>
<value><boolean>0</boolean></value>
</member>
<member>
<name>Name</name>
<value><string>EmbeddedFeedback</string></value>
</member>
</struct></value>
</data></array></value>
</member>
<member>
<name>Problems</name>
<value><array><data>
<value><struct>
<member>
<name>Feedback</name>
<value><array><data>
<value><struct>
<member>
<name>Kind</name>
<value><string>Struct</string></value>
</member>
<member>
<name>CondPath</name>
<value><string></string></value>
</member>
<member>
<name>Value</name>
<value><array><data>
<value><struct>
<member>
<name>Kind</name>
<value><string>Struct</string></value>
</member>
<member>
<name>CondPath</name>
<value><string></string></value>
</member>
<member>
<name>Value</name>
<value><array><data>
<value><struct>
<member>
<name>Kind</name>
<value><string>Derived</string></value>
</member>
<member>
<name>Expression</name>
<value><string>Response.Q1=='V' </string></value>
</member>
<member>
<name>Name</name>
<value><string>Expression</string></value>
</member>
<member>
<name>EvalMode</name>
<value><string>Dynamic</string></value>
</member>
</struct></value>
<value><struct>
<member>
<name>Kind</name>
<value><string>Array</string></value>
</member>
<member>
<name>CondPath</name>
<value><string></string></value>
</member>
<member>
<name>Value</name>
<value><array><data>
<value><struct>
<member>
<name>Kind</name>
<value><string>String</string></value>
</member>
<member>
<name>Identifier</name>
<value><string>Default</string></value>
</member>
<member>
<name>Name</name>
<value><string>0</string></value>
</member>
<member>
<name>Value</name>
<value><string>Yes, that is the correct equation.</string></value>
</member>
</struct></value>
</data></array></value>
</member>
<member>
<name>Name</name>
<value><string>Attempts</string></value>
</member>
</struct></value>
</data></array></value>
</member>
<member>
<name>Name</name>
<value><string>Correct</string></value>
</member>
</struct></value>
<value><struct>
<member>
<name>Kind</name>
<value><string>Struct</string></value>
</member>
<member>
<name>CondPath</name>
<value><string></string></value>
</member>
<member>
<name>Value</name>
<value><array><data>
<value><struct>
<member>
<name>Kind</name>
<value><string>Derived</string></value>
</member>
<member>
<name>Expression</name>
<value><string>True</string></value>
</member>
<member>
<name>Name</name>
<value><string>Expression</string></value>
</member>
<member>
<name>EvalMode</name>
<value><string>Dynamic</string></value>
</member>
</struct></value>
<value><struct>
<member>
<name>Kind</name>
<value><string>Array</string></value>
</member>
<member>
<name>CondPath</name>
<value><string></string></value>
</member>
<member>
<name>Value</name>
<value><array><data>
<value><struct>
<member>
<name>Kind</name>
<value><string>String</string></value>
</member>
<member>
<name>Identifier</name>
<value><string>Default</string></value>
</member>
<member>
<name>Name</name>
<value><string>0</string></value>
</member>
<member>
<name>Value</name>
<value><string>Your answer is incorrect.</string></value>
</member>
</struct></value>
</data></array></value>
</member>
<member>
<name>Name</name>
<value><string>Attempts</string></value>
</member>
</struct></value>
</data></array></value>
</member>
<member>
<name>Name</name>
<value><string>Default_Incorrect</string></value>
</member>
</struct></value>
<value><struct>
<member>
<name>Kind</name>
<value><string>Struct</string></value>
</member>
<member>
<name>CondPath</name>
<value><string></string></value>
</member>
<member>
<name>Value</name>
<value><array><data>
<value><struct>
<member>
<name>Kind</name>
<value><string>Derived</string></value>
</member>
<member>
<name>Expression</name>
<value><string>Response.Q1=='V1'</string></value>
</member>
<member>
<name>Name</name>
<value><string>Expression</string></value>
</member>
<member>
<name>EvalMode</name>
<value><string>Dynamic</string></value>
</member>
</struct></value>
<value><struct>
<member>
<name>Kind</name>
<value><string>Array</string></value>
</member>
<member>
<name>CondPath</name>
<value><string></string></value>
</member>
<member>
<name>Value</name>
<value><array><data>
<value><struct>
<member>
<name>Kind</name>
<value><string>String</string></value>
</member>
<member>
<name>Identifier</name>
<value><string>Default</string></value>
</member>
<member>
<name>Name</name>
<value><string>0</string></value>
</member>
<member>
<name>Value</name>
<value><string>The radius must be used in this equation, not the diameter.</string></value>
</member>
</struct></value>
</data></array></value>
</member>
<member>
<name>Name</name>
<value><string>Attempts</string></value>
</member>
</struct></value>
</data></array></value>
</member>
<member>
<name>Name</name>
<value><string>not diameter</string></value>
</member>
</struct></value>
<value><struct>
<member>
<name>Kind</name>
<value><string>Struct</string></value>
</member>
<member>
<name>CondPath</name>
<value><string></string></value>
</member>
<member>
<name>Value</name>
<value><array><data>
<value><struct>
<member>
<name>Kind</name>
<value><string>Derived</string></value>
</member>
<member>
<name>Expression</name>
<value><string>Response.Q1=='V2'</string></value>
</member>
<member>
<name>Name</name>
<value><string>Expression</string></value>
</member>
<member>
<name>EvalMode</name>
<value><string>Dynamic</string></value>
</member>
</struct></value>
<value><struct>
<member>
<name>Kind</name>
<value><string>Array</string></value>
</member>
<member>
<name>CondPath</name>
<value><string></string></value>
</member>
<member>
<name>Value</name>
<value><array><data>
<value><struct>
<member>
<name>Kind</name>
<value><string>String</string></value>
</member>
<member>
<name>Identifier</name>
<value><string>Default</string></value>
</member>
<member>
<name>Name</name>
<value><string>0</string></value>
</member>
<member>
<name>Value</name>
<value><string>A factor of 4/3 is missing from this expression.</string></value>
</member>
</struct></value>
</data></array></value>
</member>
<member>
<name>Name</name>
<value><string>Attempts</string></value>
</member>
</struct></value>
</data></array></value>
</member>
<member>
<name>Name</name>
<value><string>missing factor</string></value>
</member>
</struct></value>
<value><struct>
<member>
<name>Kind</name>
<value><string>Struct</string></value>
</member>
<member>
<name>CondPath</name>
<value><string></string></value>
</member>
<member>
<name>Value</name>
<value><array><data>
<value><struct>
<member>
<name>Kind</name>
<value><string>Derived</string></value>
</member>
<member>
<name>Expression</name>
<value><string>Response.Q1=='V3'</string></value>
</member>
<member>
<name>Name</name>
<value><string>Expression</string></value>
</member>
<member>
<name>EvalMode</name>
<value><string>Dynamic</string></value>
</member>
</struct></value>
<value><struct>
<member>
<name>Kind</name>
<value><string>Array</string></value>
</member>
<member>
<name>CondPath</name>
<value><string></string></value>
</member>
<member>
<name>Value</name>
<value><array><data>
<value><struct>
<member>
<name>Kind</name>
<value><string>String</string></value>
</member>
<member>
<name>Identifier</name>
<value><string>Default</string></value>
</member>
<member>
<name>Name</name>
<value><string>0</string></value>
</member>
<member>
<name>Value</name>
<value><string>The dimensions of this equation are not dimensions of volume.</string></value>
</member>
</struct></value>
</data></array></value>
</member>
<member>
<name>Name</name>
<value><string>Attempts</string></value>
</member>
</struct></value>
</data></array></value>
</member>
<member>
<name>Name</name>
<value><string>wrong dimensions</string></value>
</member>
</struct></value>
</data></array></value>
</member>
<member>
<name>Name</name>
<value><string>Q1</string></value>
</member>
</struct></value>
</data></array></value>
</member>
<member>
<name>Assessment</name>
<value><struct>
<member>
<name>Title</name>
<value><string>Equation for the Volume of a Sphere</string></value>
</member>
<member>
<name>Kind</name>
<value><string>Assessment</string></value>
</member>
<member>
<name>Elements</name>
<value><array><data>
<value><struct>
<member>
<name>Kind</name>
<value><string>MultipleChoice</string></value>
</member>
<member>
<name>QuestionText</name>
<value><string>The equation for the volume of a sphere is:</string></value>
</member>
<member>
<name>Default</name>
<value><string></string></value>
</member>
<member>
<name>Choices</name>
<value><array><data>
<value><struct>
<member>
<name>Name</name>
<value><string>V</string></value>
</member>
<member>
<name>Type</name>
<value><string>Text</string></value>
</member>
<member>
<name>Col</name>
<value><int>1</int></value>
</member>
<member>
<name>Value</name>
<value><string>&lt;img src='Dynamic/Resources/Global/V.jpg'&gt;</string></value>
</member>
<member>
<name>Row</name>
<value><int>1</int></value>
</member>
</struct></value>
<value><struct>
<member>
<name>Name</name>
<value><string>V1</string></value>
</member>
<member>
<name>Type</name>
<value><string>Text</string></value>
</member>
<member>
<name>Col</name>
<value><int>2</int></value>
</member>
<member>
<name>Value</name>
<value><string>&lt;img src='Dynamic/Resources/ Global /V1.jpg'&gt;</string></value>
</member>
<member>
<name>Row</name>
<value><int>1</int></value>
</member>
</struct></value>
<value><struct>
<member>
<name>Name</name>
<value><string>V2</string></value>
</member>
<member>
<name>Type</name>
<value><string>Text</string></value>
</member>
<member>
<name>Col</name>
<value><int>3</int></value>
</member>
<member>
<name>Value</name>
<value><string>&lt;img src='Dynamic/Resources/ Global /V2.jpg'&gt;</string></value>
</member>
<member>
<name>Row</name>
<value><int>1</int></value>
</member>
</struct></value>
<value><struct>
<member>
<name>Name</name>
<value><string>V3</string></value>
</member>
<member>
<name>Type</name>
<value><string>Text</string></value>
</member>
<member>
<name>Col</name>
<value><int>4</int></value>
</member>
<member>
<name>Value</name>
<value><string>&lt;img src='Dynamic/Resources/ Global /V3.jpg'&gt;</string></value>
</member>
<member>
<name>Row</name>
<value><int>1</int></value>
</member>
</struct></value>
</data></array></value>
</member>
<member>
<name>SingleAnswer</name>
<value><boolean>1</boolean></value>
</member>
<member>
<name>Validate</name>
<value><boolean>1</boolean></value>
</member>
<member>
<name>Condition</name>
<value><boolean>1</boolean></value>
</member>
<member>
<name>Name</name>
<value><string>Q1</string></value>
</member>
</struct></value>
</data></array></value>
</member>
<member>
<name>Validate</name>
<value><boolean>1</boolean></value>
</member>
<member>
<name>Preface</name>
<value><string>Select the correct equation for the volume of a sphere with radius R and diameter D.</string></value>
</member>
</struct></value>
</member>
<member>
<name>NextIncorrect</name>
<value><string>Sphere Volume</string></value>
</member>
<member>
<name>Start</name>
<value><boolean>1</boolean></value>
</member>
<member>
<name>Attempts</name>
<value><int>1</int></value>
</member>
<member>
<name>NextCorrect</name>
<value><string>Sphere Volume</string></value>
</member>
<member>
<name>Data</name>
<value><array><data>
<value><struct>
<member>
<name>Definition</name>
<value><string>
def initialize():
    "Called before the start of the problem"
    pass
</string></value>
</member>
<member>
<name>Kind</name>
<value><string>Function</string></value>
</member>
<member>
<name>Description</name>
<value><string>
If defined, this function is called before the start
of the problem to perform any required initialization.
</string></value>
</member>
<member>
<name>Name</name>
<value><string>initialize</string></value>
</member>
</struct></value>
<value><struct>
<member>
<name>Definition</name>
<value><string>
def finalize():
    "Called at the conclusion of the problem"
    pass
</string></value>
</member>
<member>
<name>Kind</name>
<value><string>Function</string></value>
</member>
<member>
<name>Description</name>
<value><string>
If defined, this function is called at the end of the problem
to perform any required finalization.
</string></value>
</member>
<member>
<name>Name</name>
<value><string>finalize</string></value>
</member>
</struct></value>
<value><struct>
<member>
<name>Definition</name>
<value><string>
def isCorrect():
    "Determines that problem is correctly answered"
    for q in Assessment.Elements:
        if hasattr(Response, q['Name']):
            fb = getattr(Feedback, q['Name'])
            if fb['Correct']['Expression'] is not True:
                return False
    return True
</string></value>
</member>
<member>
<name>Kind</name>
<value><string>Function</string></value>
</member>
<member>
<name>Description</name>
<value><string>
This function is used to determine if the current
problem has been answered correctly.
Alter with extreme care.  Do not delete!
</string></value>
</member>
<member>
<name>Name</name>
<value><string>isCorrect</string></value>
</member>
</struct></value>
</data></array></value>
</member>
<member>
<name>Resources</name>
<value><array><data>
</data></array></value>
</member>
<member>
<name>Name</name>
<value><string>Sphere Equation</string></value>
</member>
</struct></value>
<value><struct>
<member>
<name>Feedback</name>
<value><array><data>
<value><struct>
<member>
<name>Kind</name>
<value><string>Struct</string></value>
</member>
<member>
<name>CondPath</name>
<value><string></string></value>
</member>
<member>
<name>Value</name>
<value><array><data>
<value><struct>
<member>
<name>Kind</name>
<value><string>Struct</string></value>
</member>
<member>
<name>CondPath</name>
<value><string></string></value>
</member>
<member>
<name>Value</name>
<value><array><data>
<value><struct>
<member>
<name>Kind</name>
<value><string>Derived</string></value>
</member>
<member>
<name>Expression</name>
<value><string>Response.Q1=='&lt;py&gt;Data.V&lt;/py&gt;'</string></value>
</member>
<member>
<name>Name</name>
<value><string>Expression</string></value>
</member>
<member>
<name>EvalMode</name>
<value><string>Dynamic</string></value>
</member>
</struct></value>
<value><struct>
<member>
<name>Kind</name>
<value><string>Array</string></value>
</member>
<member>
<name>CondPath</name>
<value><string></string></value>
</member>
<member>
<name>Value</name>
<value><array><data>
<value><struct>
<member>
<name>Kind</name>
<value><string>String</string></value>
</member>
<member>
<name>Identifier</name>
<value><string>Default</string></value>
</member>
<member>
<name>Name</name>
<value><string>0</string></value>
</member>
<member>
<name>Value</name>
<value><string>That is the correct volume.</string></value>
</member>
</struct></value>
<value><struct>
<member>
<name>Kind</name>
<value><string>String</string></value>
</member>
<member>
<name>Identifier</name>
<value><string>second</string></value>
</member>
<member>
<name>Name</name>
<value><string>1</string></value>
</member>
<member>
<name>Value</name>
<value><string>That was your final attempt. The correct volume is &lt;py&gt;Data.V&lt;/py&gt;.</string></value>
</member>
</struct></value>
</data></array></value>
</member>
<member>
<name>Name</name>
<value><string>Attempts</string></value>
</member>
</struct></value>
</data></array></value>
</member>
<member>
<name>Name</name>
<value><string>Correct</string></value>
</member>
</struct></value>
<value><struct>
<member>
<name>Kind</name>
<value><string>Struct</string></value>
</member>
<member>
<name>CondPath</name>
<value><string></string></value>
</member>
<member>
<name>Value</name>
<value><array><data>
<value><struct>
<member>
<name>Kind</name>
<value><string>Derived</string></value>
</member>
<member>
<name>Expression</name>
<value><string>Response.Q1 == ‘No Answer’</string></value>
</member>
<member>
<name>Name</name>
<value><string>Expression</string></value>
</member>
<member>
<name>EvalMode</name>
<value><string>Dynamic</string></value>
</member>
</struct></value>
<value><struct>
<member>
<name>Kind</name>
<value><string>Array</string></value>
</member>
<member>
<name>CondPath</name>
<value><string></string></value>
</member>
<member>
<name>Value</name>
<value><array><data>
<value><struct>
<member>
<name>Kind</name>
<value><string>String</string></value>
</member>
<member>
<name>Identifier</name>
<value><string>Default</string></value>
</member>
<member>
<name>Name</name>
<value><string>0</string></value>
</member>
<member>
<name>Value</name>
<value><string>You must select a numerical answer from the list.</string></value>
</member>
</struct></value>
</data></array></value>
</member>
<member>
<name>Name</name>
<value><string>Attempts</string></value>
</member>
</struct></value>
</data></array></value>
</member>
<member>
<name>Name</name>
<value><string>Default_Incorrect</string></value>
</member>
</struct></value>
<value><struct>
<member>
<name>Kind</name>
<value><string>Struct</string></value>
</member>
<member>
<name>CondPath</name>
<value><string></string></value>
</member>
<member>
<name>Value</name>
<value><array><data>
<value><struct>
<member>
<name>Kind</name>
<value><string>Derived</string></value>
</member>
<member>
<name>Expression</name>
<value><string>Response.Q1=='&lt;py&gt;Data.V1&lt;/py&gt;'</string></value>
</member>
<member>
<name>Name</name>
<value><string>Expression</string></value>
</member>
<member>
<name>EvalMode</name>
<value><string>Dynamic</string></value>
</member>
</struct></value>
<value><struct>
<member>
<name>Kind</name>
<value><string>Array</string></value>
</member>
<member>
<name>CondPath</name>
<value><string></string></value>
</member>
<member>
<name>Value</name>
<value><array><data>
<value><struct>
<member>
<name>Kind</name>
<value><string>String</string></value>
</member>
<member>
<name>Identifier</name>
<value><string>Default</string></value>
</member>
<member>
<name>Name</name>
<value><string>0</string></value>
</member>
<member>
<name>Value</name>
<value><string>You appear to have used diameter instead of radius in your calculation.</string></value>
</member>
</struct></value>
</data></array></value>
</member>
<member>
<name>Name</name>
<value><string>Attempts</string></value>
</member>
</struct></value>
</data></array></value>
</member>
<member>
<name>Name</name>
<value><string>not diameter</string></value>
</member>
</struct></value>
<value><struct>
<member>
<name>Kind</name>
<value><string>Struct</string></value>
</member>
<member>
<name>CondPath</name>
<value><string></string></value>
</member>
<member>
<name>Value</name>
<value><array><data>
<value><struct>
<member>
<name>Kind</name>
<value><string>Derived</string></value>
</member>
<member>
<name>Expression</name>
<value><string>Response.Q1=='&lt;py&gt;Data.V2&lt;/py&gt;'</string></value>
</member>
<member>
<name>Name</name>
<value><string>Expression</string></value>
</member>
<member>
<name>EvalMode</name>
<value><string>Dynamic</string></value>
</member>
</struct></value>
<value><struct>
<member>
<name>Kind</name>
<value><string>Array</string></value>
</member>
<member>
<name>CondPath</name>
<value><string></string></value>
</member>
<member>
<name>Value</name>
<value><array><data>
<value><struct>
<member>
<name>Kind</name>
<value><string>String</string></value>
</member>
<member>
<name>Identifier</name>
<value><string>Default</string></value>
</member>
<member>
<name>Name</name>
<value><string>0</string></value>
</member>
<member>
<name>Value</name>
<value><string>You appear to have forgotten a factor of 4/3 in your volume calculation.</string></value>
</member>
</struct></value>
</data></array></value>
</member>
<member>
<name>Name</name>
<value><string>Attempts</string></value>
</member>
</struct></value>
</data></array></value>
</member>
<member>
<name>Name</name>
<value><string>missing factor</string></value>
</member>
</struct></value>
<value><struct>
<member>
<name>Kind</name>
<value><string>Struct</string></value>
</member>
<member>
<name>CondPath</name>
<value><string></string></value>
</member>
<member>
<name>Value</name>
<value><array><data>
<value><struct>
<member>
<name>Kind</name>
<value><string>Derived</string></value>
</member>
<member>
<name>Expression</name>
<value><string>Response.Q1=='&lt;py&gt;Data.V3&lt;/py&gt;'</string></value>
</member>
<member>
<name>Name</name>
<value><string>Expression</string></value>
</member>
<member>
<name>EvalMode</name>
<value><string>Dynamic</string></value>
</member>
</struct></value>
<value><struct>
<member>
<name>Kind</name>
<value><string>Array</string></value>
</member>
<member>
<name>CondPath</name>
<value><string></string></value>
</member>
<member>
<name>Value</name>
<value><array><data>
<value><struct>
<member>
<name>Kind</name>
<value><string>String</string></value>
</member>
<member>
<name>Identifier</name>
<value><string>Default</string></value>
</member>
<member>
<name>Name</name>
<value><string>0</string></value>
</member>
<member>
<name>Value</name>
<value><string>You appear to have squared the radius instead of cubing it in your volume calculation.</string></value>
</member>
</struct></value>
</data></array></value>
</member>
<member>
<name>Name</name>
<value><string>Attempts</string></value>
</member>
</struct></value>
</data></array></value>
</member>
<member>
<name>Name</name>
<value><string>cube instead</string></value>
</member>
</struct></value>
</data></array></value>
</member>
<member>
<name>Name</name>
<value><string>Q1</string></value>
</member>
</struct></value>
</data></array></value>
</member>
<member>
<name>Assessment</name>
<value><struct>
<member>
<name>Title</name>
<value><string>Volume of a Sphere</string></value>
</member>
<member>
<name>Kind</name>
<value><string>Assessment</string></value>
</member>
<member>
<name>Elements</name>
<value><array><data>
<value><struct>
<member>
<name>Kind</name>
<value><string>Selection</string></value>
</member>
<member>
<name>QuestionText</name>
<value><string>The sphere volume is</string></value>
</member>
<member>
<name>Default</name>
<value><string></string></value>
</member>
<member>
<name>TextAfter</name>
<value><string>cm&lt;sup&gt;3&lt;/sup&gt;</string></value>
</member>
<member>
<name>SingleAnswer</name>
<value><boolean>1</boolean></value>
</member>
<member>
<name>Validate</name>
<value><boolean>1</boolean></value>
</member>
<member>
<name>Size</name>
<value><int>1</int></value>
</member>
<member>
<name>Options</name>
<value><array><data>
<value><string>No Answer</string></value>
<value><string>&lt;py&gt;Data.V&lt;/py&gt;</string></value>
<value><string>&lt;py&gt;Data.V1&lt;/py&gt;</string></value>
<value><string>&lt;py&gt;Data.V2&lt;/py&gt;</string></value>
<value><string>&lt;py&gt;Data.V3&lt;/py&gt;</string></value>
</data></array></value>
</member>
<member>
<name>Condition</name>
<value><boolean>1</boolean></value>
</member>
<member>
<name>Name</name>
<value><string>Q1</string></value>
</member>
</struct></value>
</data></array></value>
</member>
<member>
<name>Validate</name>
<value><boolean>1</boolean></value>
</member>
<member>
<name>Preface</name>
<value><string>Select the volume of a sphere (cm&lt;sup&gt;3&lt;/sup&gt;) with a radius of &lt;py&gt;Data.R&lt;/py&gt; cm.</string></value>
</member>
</struct></value>
</member>
<member>
<name>NextIncorrect</name>
<value><string>None</string></value>
</member>
<member>
<name>Start</name>
<value><boolean>0</boolean></value>
</member>
<member>
<name>Attempts</name>
<value><int>2</int></value>
</member>
<member>
<name>NextCorrect</name>
<value><string>None</string></value>
</member>
<member>
<name>Data</name>
<value><array><data>
<value><struct>
<member>
<name>Definition</name>
<value><string>
def initialize():
    "Called before the start of the problem"
    pass
</string></value>
</member>
<member>
<name>Kind</name>
<value><string>Function</string></value>
</member>
<member>
<name>Name</name>
<value><string>initialize</string></value>
</member>
<member>
<name>CondPath</name>
<value><string>initialize</string></value>
</member>
<member>
<name>Description</name>
<value><string>
If defined, this function is called before the start
of the problem to perform any required initialization.
</string></value>
</member>
</struct></value>
<value><struct>
<member>
<name>Definition</name>
<value><string>
def finalize():
    "Called at the conclusion of the problem"
    pass
</string></value>
</member>
<member>
<name>Kind</name>
<value><string>Function</string></value>
</member>
<member>
<name>Name</name>
<value><string>finalize</string></value>
</member>
<member>
<name>CondPath</name>
<value><string>finalize</string></value>
</member>
<member>
<name>Description</name>
<value><string>
If defined, this function is called at the end of the problem
to perform any required finalization.
</string></value>
</member>
</struct></value>
<value><struct>
<member>
<name>Definition</name>
<value><string>
def isCorrect():
    "Determines that problem is correctly answered"
    for q in Assessment.Elements:
        if hasattr(Response, q['Name']):
            fb = getattr(Feedback, q['Name'])
            if fb['Correct']['Expression'] is not True:
                return False
    return True
</string></value>
</member>
<member>
<name>Kind</name>
<value><string>Function</string></value>
</member>
<member>
<name>Name</name>
<value><string>isCorrect</string></value>
</member>
<member>
<name>CondPath</name>
<value><string>isCorrect</string></value>
</member>
<member>
<name>Description</name>
<value><string>
This function is used to determine if the current
problem has been answered correctly.
Alter with extreme care.  Do not delete!
</string></value>
</member>
</struct></value>
<value><struct>
<member>
<name>Kind</name>
<value><string>Float</string></value>
</member>
<member>
<name>Name</name>
<value><string>R</string></value>
</member>
<member>
<name>CondPath</name>
<value><string>R</string></value>
</member>
<member>
<name>Value</name>
<value><double>5.0</double></value>
</member>
<member>
<name>Description</name>
<value><string></string></value>
</member>
</struct></value>
<value><struct>
<member>
<name>Kind</name>
<value><string>Derived</string></value>
</member>
<member>
<name>CondPath</name>
<value><string>V</string></value>
</member>
<member>
<name>EvalMode</name>
<value><string>Initial</string></value>
</member>
<member>
<name>Description</name>
<value><string></string></value>
</member>
<member>
<name>Expression</name>
<value><string>int(4.*pi*pow(R,3)/3.+.5)</string></value>
</member>
<member>
<name>Name</name>
<value><string>V</string></value>
</member>
</struct></value>
<value><struct>
<member>
<name>Kind</name>
<value><string>Derived</string></value>
</member>
<member>
<name>CondPath</name>
<value><string>V1</string></value>
</member>
<member>
<name>EvalMode</name>
<value><string>Initial</string></value>
</member>
<member>
<name>Description</name>
<value><string></string></value>
</member>
<member>
<name>Expression</name>
<value><string>int(4.*pi*pow(2*R,3)/3.+.5)</string></value>
</member>
<member>
<name>Name</name>
<value><string>V1</string></value>
</member>
</struct></value>
<value><struct>
<member>
<name>Kind</name>
<value><string>Derived</string></value>
</member>
<member>
<name>CondPath</name>
<value><string>V2</string></value>
</member>
<member>
<name>EvalMode</name>
<value><string>Initial</string></value>
</member>
<member>
<name>Description</name>
<value><string></string></value>
</member>
<member>
<name>Expression</name>
<value><string>int(pi*pow(R,3)+.5)</string></value>
</member>
<member>
<name>Name</name>
<value><string>V2</string></value>
</member>
</struct></value>
<value><struct>
<member>
<name>Kind</name>
<value><string>Derived</string></value>
</member>
<member>
<name>CondPath</name>
<value><string>V3</string></value>
</member>
<member>
<name>EvalMode</name>
<value><string>Initial</string></value>
</member>
<member>
<name>Description</name>
<value><string></string></value>
</member>
<member>
<name>Expression</name>
<value><string>int(4.*pi*pow(R,2)/3.+.5)</string></value>
</member>
<member>
<name>Name</name>
<value><string>V3</string></value>
</member>
</struct></value>
</data></array></value>
</member>
<member>
<name>Resources</name>
<value><array><data>
</data></array></value>
</member>
<member>
<name>Name</name>
<value><string>Sphere Volume</string></value>
</member>
</struct></value>
</data></array></value>
</member>
<member>
<name>GlobalResources</name>
<value><array><data>
<value><struct>
<member>
<name>Kind</name>
<value><string>Base64</string></value>
</member>
<member>
<name>Name</name>
<value><string>V.jpg</string></value>
</member>
<member>
<name>CondPath</name>
<value><string>V.jpg</string></value>
</member>
<member>
<name>Value</name>
<value><string>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
</string></value>
</member>
<member>
<name>Description</name>
<value><string></string></value>
</member>
</struct></value>
<value><struct>
<member>
<name>Kind</name>
<value><string>Base64</string></value>
</member>
<member>
<name>Name</name>
<value><string>V1.jpg</string></value>
</member>
<member>
<name>CondPath</name>
<value><string>V1.jpg</string></value>
</member>
<member>
<name>Value</name>
<value><string>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
</string></value>
</member>
<member>
<name>Description</name>
<value><string></string></value>
</member>
</struct></value>
<value><struct>
<member>
<name>Kind</name>
<value><string>Base64</string></value>
</member>
<member>
<name>Name</name>
<value><string>V2.jpg</string></value>
</member>
<member>
<name>CondPath</name>
<value><string>V2.jpg</string></value>
</member>
<member>
<name>Value</name>
<value><string>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
</string></value>
</member>
<member>
<name>Description</name>
<value><string></string></value>
</member>
</struct></value>
<value><struct>
<member>
<name>Kind</name>
<value><string>Base64</string></value>
</member>
<member>
<name>Name</name>
<value><string>V3.jpg</string></value>
</member>
<member>
<name>CondPath</name>
<value><string>V3.jpg</string></value>
</member>
<member>
<name>Value</name>
<value><string>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
</string></value>
</member>
<member>
<name>Description</name>
<value><string></string></value>
</member>
</struct></value>
</data></array></value>
</member>
</struct></value>
</param>
</params>
